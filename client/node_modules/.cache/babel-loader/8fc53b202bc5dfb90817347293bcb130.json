{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tghak\\\\Desktop\\\\projects\\\\shop-shop\\\\client\\\\src\\\\components\\\\CategoryMenu\\\\index.js\";\nimport React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from '../../utils/actions';\nimport { idbPromise } from '../../utils/helpers'; // REDUX\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport store from '../../utils/Redux/store';\n\nfunction CategoryMenu() {\n  const [state, dispatch] = useStoreContext(); // const { categories } = state;\n\n  const {\n    loading,\n    data: categoryData\n  } = useQuery(QUERY_CATEGORIES); // REDUX\n\n  const rState = store.getState();\n  const rCategories = useSelector(rState => rState.categories);\n  const rDispatch = useDispatch();\n  console.log('redux state: ', rState);\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories\n      });\n      categoryData.categories.forEach(category => {\n        idbPromise('categories', 'put', category);\n      }); // REDUX\n\n      rDispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then(categories => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories\n        }); // REDUX\n\n        rDispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = id => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id\n    }); // REDUX\n\n    rDispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, \"Choose a Category:\"), rCategories.map(item => /*#__PURE__*/React.createElement(\"button\", {\n    key: item._id,\n    onClick: () => {\n      handleClick(item._id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, item.name)));\n}\n\nexport default CategoryMenu;","map":{"version":3,"sources":["C:/Users/tghak/Desktop/projects/shop-shop/client/src/components/CategoryMenu/index.js"],"names":["React","useEffect","useQuery","QUERY_CATEGORIES","useStoreContext","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","idbPromise","useSelector","useDispatch","store","CategoryMenu","state","dispatch","loading","data","categoryData","rState","getState","rCategories","categories","rDispatch","console","log","type","forEach","category","then","handleClick","id","currentCategory","map","item","_id","name"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from '../../utils/actions';\nimport { idbPromise } from '../../utils/helpers';\n\n// REDUX\nimport { useSelector, useDispatch } from 'react-redux'\nimport store from '../../utils/Redux/store';\n\nfunction CategoryMenu() {\n  const [state, dispatch] = useStoreContext();\n\n  // const { categories } = state;\n\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  // REDUX\n  const rState = store.getState();\n  const rCategories = useSelector(rState => rState.categories)\n  const rDispatch = useDispatch();\n  console.log('redux state: ', rState)\n\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories\n      });\n      categoryData.categories.forEach(category => {\n        idbPromise('categories', 'put', category);\n      });\n\n      // REDUX\n      rDispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories\n      });\n\n    } else if (!loading) {\n      idbPromise('categories', 'get').then(categories => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories\n        });\n        \n        // REDUX\n        rDispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = id => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id\n    });\n\n    // REDUX\n    rDispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id\n    });\n  };\n\n  return (\n    <div>\n      <h2>Choose a Category:</h2>\n      {rCategories.map(item => (\n        <button\n          key={item._id}\n          onClick={() => {\n            handleClick(item._id);\n          }}\n        >\n          {item.name}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default CategoryMenu;\n"]},"metadata":{},"sourceType":"module"}